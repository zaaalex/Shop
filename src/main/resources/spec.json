{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/addUser": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/addOrder": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "users",
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "orders",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orders"
                }
              }
            }
          }
        }
      }
    },
    "/cakes": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "cakes",
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cakes"
                }
              }
            }
          }
        }
      }
    },
    "/cake/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "cake",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cake"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "name",
          "number"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name"
          },
          "number": {
            "type": "string",
            "description": "number"
          }
        },
        "description": "Info about user"
      },
      "Order": {
        "required": [
          "delivery",
          "deliveryAddress",
          "deliveryTime",
          "id",
          "orderStatus",
          "payment",
          "purchases",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "delivery": {
            "type": "string",
            "description": "do you need delivery?",
            "enum": [
              "NEED",
              "WITHOUT"
            ]
          },
          "deliveryAddress": {
            "type": "string",
            "description": "Delivery address"
          },
          "deliveryTime": {
            "type": "string",
            "description": "Delivery time"
          },
          "orderStatus": {
            "type": "string",
            "description": "Order status",
            "enum": [
              "NEW",
              "CANCELED",
              "PERFORMED",
              "FINISHED"
            ]
          },
          "purchases": {
            "type": "array",
            "description": "purchases",
            "items": {
              "$ref": "#/components/schemas/Purchase"
            }
          }
        },
        "description": "Order"
      },
      "Payment": {
        "required": [
          "amount",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "description": "amount of payment",
            "format": "double"
          },
          "status": {
            "type": "string",
            "description": "status",
            "enum": [
              "SCHEDULED",
              "PAID"
            ]
          }
        },
        "description": "info about payment"
      },
      "Purchase": {
        "required": [
          "cakeId",
          "count"
        ],
        "type": "object",
        "properties": {
          "cakeId": {
            "type": "integer",
            "description": "cakeId",
            "format": "int64"
          },
          "count": {
            "type": "integer",
            "description": "count cake",
            "format": "int32"
          }
        },
        "description": "Info about purchase"
      },
      "Users": {
        "required": [
          "user_list"
        ],
        "type": "object",
        "properties": {
          "user_list": {
            "type": "array",
            "description": "user_list",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "description": "Info about users"
      },
      "Orders": {
        "required": [
          "order_list"
        ],
        "type": "object",
        "properties": {
          "order_list": {
            "type": "array",
            "description": "order_list",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          }
        },
        "description": "Info about orders"
      },
      "Cake": {
        "required": [
          "calories",
          "id",
          "image",
          "name",
          "prise",
          "weight"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "calories": {
            "type": "number",
            "description": "Calories of cake"
          },
          "image": {
            "type": "string",
            "description": "Relative url of cake image"
          },
          "prise": {
            "type": "integer",
            "description": "Prise of cake",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "Cake weight"
          }
        },
        "description": "Info about cakes"
      },
      "Cakes": {
        "required": [
          "cake_list"
        ],
        "type": "object",
        "properties": {
          "cake_list": {
            "type": "array",
            "description": "cake_list",
            "items": {
              "$ref": "#/components/schemas/Cake"
            }
          }
        },
        "description": "Info about cakes"
      }
    }
  }
}